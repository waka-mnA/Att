Q.1 Imagine that instead of influencing data (i.e., the state matrix), a
    fault can influence control-flow (e.g., conditional statements, loop
    structure) somehow during execution.  Stating any assumptions you make,
    give an alternative attack strategy based on this ability.

A.1 If the loop structure can be controlled, attacker can disable the loop for
    SubBytes, ShiftRows, MixColumns, and AddRound functions, which results in
    only operating AddRound function with original key.  Then, the key will
    be detected only exclusive or of plaintext and ciphertext.

Q.2 The question does not specify how faults are induced.  For the given
    attack target and context, explain one viable approach.

A.2 For this target, the attacker can control when and where in state matrix
    the fault can induced.  However, attacker cannot know the fault value.
    Therefore the viable approach is to induce the fault in the input of
    8th round, and from the MixColumn pattern, generate the simultaneous
    equations to reduce the possible key spaces and carry out the exhaustive
    search.  This approach does not depend on the fault difference as long as
    the difference is non-zero.

Q.3 For side-channel attacks, the number of acquisitions required can be
    used as a measure of efficiency.  Outline the equivalent measure for
    fault attacks, and explain whether (and why) you think a side-channel
    attack on AES could be as efficient as a fault attack based on these
    measures.

A.3 A measure of efficiency in fault attack can be number of key hypothesis
    that will be found by solving the 3 simultaneous equations with 4 unknown
    variables. Reducing those key hypothesis will reduce the time for exhaustive
    search. The attack I implemented used two fault ciphertexts, but it is not
    always the case that attacker can get more than two fault ciphertexts.
    Considering the single fault ciphertext attack, the program needs to operate
    around 2^8 exhaustive search. Therefore, even though the number of interaction
    with the oracle and acquisitions required, the exhaustive search could take very
    long time, hence the efficient side-channel attacks could be faster than fault
    attack.

Q.4 How do the properties of different AES round functions influence the
    effectiveness of your attack?  More specifically, imagine SubBytes is
    removed: does this help or hinder your attack?

A.4 SubBytes does not hinder my attack since it is permutation operation
    and this can be recovered by using inverse SubBytes. Since this attack
    uses a lot of memory spaces by storing all key hypothesis, the program
    may end up in segmentation fault, therefore it may help the
    attack by reducing the memory space used by lookup table.
