Q.1 Consider an example where N = 551, e = 5, d = 101 and c = 243.  Using
    your own words, briefly explain and illustrate the working principle of
    this attack (i.e., how and why it works).

A.1 This attack is called Manger's attack and using the error code, it finds
    multiple f values which f*m lies in the certain range.  The error code
    used is that whether decrypted plaintext is less than a certain value B,
    or not.
    let k = byte length of N and B = 2^(8*(k-1)),
    so k = 2 and B = 256 with given example.
    The attacker choose f and send f^e * c mod N to the oracle and get the
    error code.  If the plaintext decrypted is bigger than or equal to B,
    it will return error code 1. If it is less than B, then it will return
    the error code 2.
    There are three f values that need to be chosen in this attack.
    First, f1 is chosen from multiples of 2. We try from 2 and if the plaintext
    is less than B, we keep multiplying by 2, until we get plaintext bigger
    than B.
    With given example, f1^5 * 243 mod 551 will be sent to oracle.
    if f1 = 2, 7776 mod 551 = 62
    if f1 = 4, 248832 mod 551 = 331 > 256
    therefore, f1 = 4.
    Next, we need to find f2 such that f2*m is just less than (N + B)
    We start with f2 = floor((N+B)/B)* f1/2.
    With given example, f2 = 3 * 4/2 = 6
    if f2^5 *243 mod 552 is greater than B, we add f1/2 to f2 and keep trying.
    f2^5 * 243 mod 551 = 189
    therefore, f2 = 6
    Then, we find f3 such that f3 * m is in the range of 2B wide and spans
    single boundary point.
    We also find possible minimum and maximum plaintext value.
    let m_min = ceil(N/f2), m_max = floor((N+B)/f2)
    so m_min = 92, m_max = 134
    By choosing ftmp, we also select a boundary point, i*N+B
    so, ftmp = floor(2B/(m_max - m_min)) = 12
    i = floor(ftmp * m_min / N) = 2
    f3*m spans a single boundary point at i*N+B
    so, f3 = ceil(i*N/m_min) = 12
    f3^5 * 243 mod 551 = 538
    if this is bigger than or equal to B, update m_min.
      m_min = ceil((i*N+B)/f3) and calculate ftmp and so on...
    if it is less than B, update m_max
      m_max = floor((i*N+B)/f3) and calculate ftmp and so on...
    we keep doing this until m_min = m_max, which is the target material.


Q.2 To prevent the attack, the vendor suggests altering the software: the
    idea is that no matter what error occurs, the same error code will be
    produced.  Explain whether (and why, or why not) this change alone is
    sufficient.

A.2 This change will disable the manger's attack.  The attack depends on
    the error message from oracle to know whether the f*m decrypted is
    bigger than a certain value, which can be checked by error code 1 in
    the original oracle. If we cannot distinguish what kind of error
    occurred, this attack will not be able to find the target.

Q.5 Explain how the concept of plaintext awareness relates to this attack.

A.5 A cryptosystem is plaintext aware if it is difficult to create a
    ciphertext without the knowledge of corresponding plaintext. This system
    is plaintext aware because it induced the integrity check and the octet
    string structure. However, the check of the most significant digit in octet
    string structure reveals the important information that this attack relies on.

Q.6 RSA has a homomorphic property: explain what this means, and how it
    relates to this attack.

A.6 Homomorphic property in cryptosystem is where the computations
    carried out on cipertext/plaintext will end up to the matched
    plaintext/ciphertext when it is decrypted/encrypted. In this attack,
    we used this property as sending f^e * c mod N to oracle and receive error
    code based on decrypted result f * m.
